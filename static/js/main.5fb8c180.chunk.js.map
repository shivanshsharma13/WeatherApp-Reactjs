{"version":3,"sources":["react components/weather.component.jsx","react components/form.component.jsx","App.js","index.js"],"names":["Weather","props","className","city","WeatherIcon","temp_cel","min","temp_max","max","temp_min","description","charAt","toUpperCase","slice","Form","error","role","onSubmit","loadWeather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","Country","fetch","api_call","json","responce","console","log","setState","sys","celcius","cal_cel","main","temp","weather","get_Weather","id","state","undefined","icon","ThunderStorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","Range","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fb8c180.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./weather.style.css\"\r\n\r\nfunction minmaxTemp(min, max) {\r\n\r\n    return (\r\n\r\n        <h3>\r\n            <span className=\"px-4\">{min}&deg;</span>\r\n            <span className=\"px-4\">{max}&deg;</span>\r\n        </h3>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\nfunction Weather(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"container text-light\">\r\n                <div className=\"card\">\r\n                    <h1 className=\"text-white py-3\">{props.city}</h1>\r\n                    <h5 className=\"py-4\">\r\n                        <i className={`wi ${props.WeatherIcon} display-1`}></i>\r\n                    </h5>\r\n\r\n                    <h1 className=\"py-2\">{props.temp_cel}&deg;</h1>\r\n\r\n                    {minmaxTemp(props.temp_max, props.temp_min)}\r\n                    <h4 className=\"py-3\">{props.description.charAt(0).toUpperCase() +\r\n                        props.description.slice(1)}</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react';\r\nimport \"./Form.style.css\";\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div>{props.error ? error() : null}</div>\r\n            <form onSubmit={props.loadWeather}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 offset-md-2\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" name=\"city\" autoComplete=\"off\" placeholder=\"city\" />\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" name=\"Country\" autoComplete=\"off\" placeholder=\"country\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-md-0 text-md-left\">\r\n                        <button className=\"btn btn-warning\">Get weather</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction error() {\r\n    return (\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n            Please Enter city and Country!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Weather from './react components/weather.component';\nimport Form from './react components/form.component';\nimport \"weather-icons/css/weather-icons.css\"\n\n\nconst API_key = \"b6e4bd1c3d1334f5f86d39d483a629f7\";\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      celcius: undefined,\n      main: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n\n\n    };\n\n    this.WeatherIcon = {\n      ThunderStorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n  }\n\n  cal_cel(temp) {\n    let cel = Math.floor(temp - 273.15)\n    return cel;\n  }\n\n  get_Weather(icon, Range) {\n    switch (true) {\n      case Range >= 200 && Range <= 232:\n        this.setState({ icon: this.WeatherIcon.ThunderStorm })\n        break;\n\n\n      case Range >= 300 && Range <= 321:\n        this.setState({ icon: this.WeatherIcon.Drizzle })\n        break;\n\n\n      case Range >= 500 && Range <= 531:\n        this.setState({ icon: this.WeatherIcon.Rain })\n        break;\n\n\n      case Range >= 600 && Range <= 622:\n        this.setState({ icon: this.WeatherIcon.Snow })\n        break;\n\n\n      case Range >= 701 && Range <= 781:\n        this.setState({ icon: this.WeatherIcon.Atmosphere })\n        break;\n\n\n      case Range >= 801 && Range <= 804:\n        this.setState({ icon: this.WeatherIcon.Clouds })\n        break;\n\n      case Range = 800:\n        this.setState({ icon: this.WeatherIcon.Clear })\n        break;\n\n      default:\n        this.setState({ icon: this.WeatherIcon.Clouds })\n\n    }\n  }\n\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.Country.value;\n\n\n    if (city && country) {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n\n      const responce = await api_call.json();\n\n      console.log(responce)\n\n      this.setState({\n        city: `${responce.name} , ${responce.sys.country}`,\n        celcius: this.cal_cel(responce.main.temp),\n        temp_max: this.cal_cel(responce.main.temp_max),\n        temp_min: this.cal_cel(responce.main.temp_min),\n        description: responce.weather[0].description,\n\n      })\n\n      this.get_Weather(this.WeatherIcon, responce.weather[0].id)\n    }\n\n    else {\n      this.setState({ error: true })\n    }\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadWeather={this.getWeather} error={this.state.error} />\n        <Weather city={this.state.city}\n          country={this.state.country}\n          temp_cel={this.state.celcius}\n          temp_min={this.state.temp_min}\n          temp_max={this.state.temp_max}\n          description={this.state.description}\n          WeatherIcon={this.state.icon} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}